{"version":3,"file":"js/463.b6220ba0.js","mappings":"4OAIA,IAAIA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAK3PS,EAA6B,qBAAXC,OAElBC,EAAQ,CAEVC,QAAS,QACTC,QAAUJ,EAAiC,KAAtBC,OAAOI,aAC5BC,QAAS,CACPF,QAAUJ,EAAmC,KAAxBC,OAAOM,iBAI5BC,EAAM,CACRC,IAAK,SAAab,EAAKc,GACrB,IAAIC,KAAKC,SAGT,YAAYC,IAARH,EACKC,KAAKG,OAAOlB,IAErBe,KAAKP,QAAQW,QAAQnB,EAAKoB,EAAUN,IAC7BA,EACT,EACAO,IAAK,SAAarB,EAAKsB,GACrB,GAAIP,KAAKC,SACP,OAAOM,EAET,IAAIR,EAAMS,EAAYR,KAAKP,QAAQgB,QAAQxB,IAC3C,YAAeiB,IAARH,EAAoBQ,EAAMR,CACnC,EACAW,IAAK,SAAazB,GAChB,YAAyBiB,IAAlBF,KAAKM,IAAIrB,EAClB,EACAkB,OAAQ,SAAgBlB,GAClBe,KAAKC,UAGTD,KAAKP,QAAQkB,WAAW1B,EAC1B,EACA2B,MAAO,WACDZ,KAAKC,UAGTD,KAAKP,QAAQmB,OACf,EACAC,OAAQ,WACN,GAAIb,KAAKC,SACP,OAAO,KAET,IAAIa,EAAM,CAAC,EAIX,OAHAd,KAAKe,SAAQ,SAAU9B,EAAKc,GAC1Be,EAAI7B,GAAOc,CACb,IACOe,CACT,EACAC,QAAS,SAAiBC,GACxB,IAAIhB,KAAKC,SAGT,IAAK,IAAIpB,EAAI,EAAGA,EAAImB,KAAKP,QAAQV,OAAQF,IAAK,CAC5C,IAAII,EAAMe,KAAKP,QAAQR,IAAIJ,GAC3BmC,EAAS/B,EAAKe,KAAKM,IAAIrB,GACzB,CACF,GAOF,SAASoB,EAAUN,GACjB,OAAOkB,KAAKC,UAAUnB,EACxB,CAEA,SAASS,EAAYT,GACnB,GAAmB,kBAARA,EAGX,IACE,OAAOkB,KAAKE,MAAMpB,EAGpB,CAFE,MAAOqB,GACP,OAAOrB,QAAOG,CAChB,CACF,CAjBAzB,EAASc,EAAOM,GAEhBpB,EAASc,EAAMI,QAASE,GAiBxB,IACE,IAAIwB,EAAU,cACd9B,EAAMO,IAAIuB,EAASA,GACf9B,EAAMe,IAAIe,KAAaA,IACzB9B,EAAMU,UAAW,GAEnBV,EAAMY,OAAOkB,EAGf,CAFE,MAAOD,GACP7B,EAAMU,UAAW,CACnB,CAEA,QCtGMqB,EAAY,YAEX,SAASC,EAAYC,GAE1B,OADA/B,EAAAA,QAAAA,IAAoB6B,EAAWE,GACxBA,CACR,CAEM,SAASC,IACd,OAAOhC,EAAAA,QAAAA,IAAoB6B,EAAW,GACvC,CAEM,SAASI,IACdjC,EAAAA,QAAAA,OAAuB6B,EACxB,C","sources":["webpack://lin-cms-vue/./node_modules/good-storage/dist/storage.esm.js","webpack://lin-cms-vue/./src/lin/util/storage.js"],"sourcesContent":["/**\n * good-storage v1.1.1\n * (c) 2020 ustbhuangyi\n */\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * 本地存储实现,封装localStorage和sessionStorage\n */\nvar isServer = typeof window === 'undefined';\n\nvar store = {\n  /* eslint-disable no-undef */\n  version: '1.1.1',\n  storage: !isServer ? window.localStorage : null,\n  session: {\n    storage: !isServer ? window.sessionStorage : null\n  }\n};\n\nvar api = {\n  set: function set(key, val) {\n    if (this.disabled) {\n      return;\n    }\n    if (val === undefined) {\n      return this.remove(key);\n    }\n    this.storage.setItem(key, serialize(val));\n    return val;\n  },\n  get: function get(key, def) {\n    if (this.disabled) {\n      return def;\n    }\n    var val = deserialize(this.storage.getItem(key));\n    return val === undefined ? def : val;\n  },\n  has: function has(key) {\n    return this.get(key) !== undefined;\n  },\n  remove: function remove(key) {\n    if (this.disabled) {\n      return;\n    }\n    this.storage.removeItem(key);\n  },\n  clear: function clear() {\n    if (this.disabled) {\n      return;\n    }\n    this.storage.clear();\n  },\n  getAll: function getAll() {\n    if (this.disabled) {\n      return null;\n    }\n    var ret = {};\n    this.forEach(function (key, val) {\n      ret[key] = val;\n    });\n    return ret;\n  },\n  forEach: function forEach(callback) {\n    if (this.disabled) {\n      return;\n    }\n    for (var i = 0; i < this.storage.length; i++) {\n      var key = this.storage.key(i);\n      callback(key, this.get(key));\n    }\n  }\n};\n\n_extends(store, api);\n\n_extends(store.session, api);\n\nfunction serialize(val) {\n  return JSON.stringify(val);\n}\n\nfunction deserialize(val) {\n  if (typeof val !== 'string') {\n    return undefined;\n  }\n  try {\n    return JSON.parse(val);\n  } catch (e) {\n    return val || undefined;\n  }\n}\n\ntry {\n  var testKey = '__storejs__';\n  store.set(testKey, testKey);\n  if (store.get(testKey) !== testKey) {\n    store.disabled = true;\n  }\n  store.remove(testKey);\n} catch (e) {\n  store.disabled = true;\n}\n\nexport default store;\n","import storage from 'good-storage'\r\n\r\nconst LOGIN_KEY = '__login__'\r\n\r\nexport function setLoggedIn(flag) {\r\n  storage.session.set(LOGIN_KEY, flag)\r\n  return flag\r\n}\r\n\r\nexport function loadLoggedIn() {\r\n  return storage.session.get(LOGIN_KEY, '')\r\n}\r\n\r\nexport function cleanLoggedIn() {\r\n  storage.session.remove(LOGIN_KEY)\r\n}\r\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","isServer","window","store","version","storage","localStorage","session","sessionStorage","api","set","val","this","disabled","undefined","remove","setItem","serialize","get","def","deserialize","getItem","has","removeItem","clear","getAll","ret","forEach","callback","JSON","stringify","parse","e","testKey","LOGIN_KEY","setLoggedIn","flag","loadLoggedIn","cleanLoggedIn"],"sourceRoot":""}