{"version":3,"file":"js/5892.2fded36d.js","mappings":"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","sources":["webpack://lin-cms-vue/./node_modules/core-js/internals/string-repeat.js","webpack://lin-cms-vue/./node_modules/core-js/modules/es.number.to-fixed.js","webpack://lin-cms-vue/./src/component/base/upload-image/index.vue","webpack://lin-cms-vue/./src/component/base/upload-image/index.vue?ec62"],"sourcesContent":["'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $RangeError = RangeError;\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toIntegerOrInfinity(count);\n  if (n < 0 || n == Infinity) throw $RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar $RangeError = RangeError;\nvar $String = String;\nvar floor = Math.floor;\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar nativeToFixed = uncurryThis(1.0.toFixed);\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = $String(data[index]);\n      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = fails(function () {\n  return nativeToFixed(0.00008, 3) !== '0.000' ||\n    nativeToFixed(0.9, 0) !== '1' ||\n    nativeToFixed(1.255, 2) !== '1.25' ||\n    nativeToFixed(1000000000000000128.0, 0) !== '1000000000000000128';\n}) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toIntegerOrInfinity(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (fractDigits < 0 || fractDigits > 20) throw $RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return $String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat('0', fractDigits - k) + result\n        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","<!--\r\n Component: UploadImgs\r\n Describe: 多图片上传组件, 附有预览, 排序, 验证等功能\r\n\r\ntodo: 使用中间件模式优化信息装载和验证功能\r\ntodo: 文件判断使用 serveWorker 优化性能\r\n-->\r\n\r\n<template>\r\n  <div class=\"upload-imgs-container\" v-loading=\"loading\">\r\n    <div v-for=\"(item, i) in itemList\" :key=\"item.id\">\r\n      <div v-if=\"item.display\">\r\n        <div class=\"thumb-item\" :style=\"boxStyle\" v-loading=\"item.loading\">\r\n          <el-image\r\n            :fit=\"fit\"\r\n            :ref=\"setImageRef\"\r\n            :src=\"item.display\"\r\n            class=\"thumb-item-img\"\r\n            :previewSrcList=\"srcList\"\r\n            style=\"width: 100%; height: 100%\"\r\n          >\r\n          </el-image>\r\n          <div class=\"info\">\r\n            <i\r\n              v-if=\"item.file\"\r\n              class=\"el-icon-upload wait-upload\"\r\n              @click.prevent.stop=\"delItem(item.id)\"\r\n              title=\"等待上传\"\r\n            ></i>\r\n          </div>\r\n          <div class=\"control\">\r\n            <i v-if=\"!disabled\" class=\"el-icon-close del\" @click.prevent.stop=\"delItem(item.id)\" title=\"删除\"></i>\r\n            <div v-if=\"!disabled\" class=\"preview\" title=\"更换图片\" @click.prevent.stop=\"handleClick(item.id)\">\r\n              <i class=\"el-icon-edit\"></i>\r\n            </div>\r\n            <div class=\"control-bottom\" v-if=\"sortable || preview\">\r\n              <i\r\n                v-if=\"sortable && !disabled\"\r\n                title=\"前移\"\r\n                class=\"control-bottom-btn el-icon-back\"\r\n                :class=\"{ disabled: i === 0 }\"\r\n                @click.stop=\"move(item.id, -1)\"\r\n              ></i>\r\n              <i\r\n                v-if=\"preview\"\r\n                class=\"control-bottom-btn el-icon-view\"\r\n                title=\"预览\"\r\n                style=\"cursor: pointer\"\r\n                @click.stop=\"previewImg(item, i)\"\r\n              ></i>\r\n              <i\r\n                v-if=\"sortable && !disabled\"\r\n                title=\"后移\"\r\n                class=\"control-bottom-btn el-icon-right\"\r\n                :class=\"{ disabled: i === itemList.length - 1 }\"\r\n                @click.stop=\"move(item.id, 1)\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <div\r\n          class=\"upload-item\"\r\n          :class=\"{ disabled: disabled }\"\r\n          :style=\"boxStyle\"\r\n          @click=\"handleClick(item.id)\"\r\n          @keydown=\"handleKeydown($event, item.id)\"\r\n        >\r\n          <i class=\"el-icon-plus\" style=\"font-size: 3em\"></i>\r\n          <div v-html=\"rulesTip.join('<br>')\" style=\"margin-top: 1em\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <input\r\n      ref=\"input\"\r\n      type=\"file\"\r\n      :accept=\"accept\"\r\n      :multiple=\"multiple\"\r\n      @change=\"handleChange\"\r\n      class=\"upload-imgs__input\"\r\n      aria-labelledby=\"Upload images\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { post } from '@/lin/plugin/axios'\r\nimport { getFileType, checkIsAnimated, isEmptyObj, createId } from './utils'\r\n\r\n/**\r\n * 本地图像通过验证后构造的信息对象\r\n * @typedef {Object<string, number, any>} LocalFileInfo\r\n * @property {string} localSrc 本地图像预览地址\r\n * @property {File} file 本地图像文件\r\n * @property {number} width 宽\r\n * @property {number} height 高\r\n * @property {string} name 文件名\r\n * @property {number} size 文件大小\r\n * @property {string} type 文件的媒体类型 (MIME)\r\n * @property {Date} lastModified 文件最后修改时间\r\n * @property {boolean} isAnimated 是否是动态图, 如果不进行检测则为 null\r\n */\r\n\r\n/**\r\n * 返回数据对象\r\n * 初始化的图片如果没有传入字段, 则值为空 null\r\n * @typedef {Object<string, number>} ReturnItem\r\n * @property {number|string} id 初始化数据的 id\r\n * @property {number|string} imgId 图像资源 id\r\n * @property {string} src 文件相对路径\r\n * @property {string} display 图像完整地址\r\n * @property {number} height 高\r\n * @property {number} width 宽\r\n * @property {string} fileName 文件名\r\n * @property {string} fileType 文件的媒体类型 (MIME), 针对部分文件类型做了检测\r\n * @property {boolean} isAnimated 是否是动态图, 如果不进行检测则为 null\r\n */\r\n\r\n/**\r\n * 返回数据对象\r\n * @typedef {Object} ValidateRule\r\n * @property {array|number} ratio 比例 [宽，高], 或者 宽/高 的数值\r\n * @property {number} width 宽度必需等于\r\n * @property {number} height 高度必需等于\r\n * @property {number} minWidth 最小宽\r\n * @property {number} minHeight 最小高\r\n * @property {number} minSize 最小 size（Mb)\r\n * @property {number} maxSize 最大 size（Mb)\r\n * @property {number} allowAnimated 是否允许上传动图, 0 不检测, 1 不允许动图, 2 只允许动图. 要检查此项, 需设置属性 animated-check 为 true\r\n */\r\n\r\nconst ONE_KB = 1024\r\nconst ONE_MB = ONE_KB * 1024\r\n\r\n/**\r\n * 创建项, 如不传入参数则创建空项\r\n * status 状态转换说明:\r\n *  - 如果不传入参数, 创建上传空项, status: input\r\n *  - 如果只传入 data, 不传入 oldData\r\n *    - data 是本地数据(数据中是否携带id), status: new\r\n *    - data 不是本地数据(来源可能是初始化或是其他), status 与原状态保持一致, 如果没有原状态就是 init\r\n *  - data 与 oldData 都传入\r\n *    - data 为本地数据, oldData 是 input/new, status: new\r\n *    - data 为本地数据, oldData 是 init/edit, status: edit\r\n *    - data 不是本地数据, status 与原状态保持一致, 如果没有原状态就是 init\r\n * @returns {Item}\r\n */\r\nfunction createItem(data = null, oldData = {}) {\r\n  let item = {\r\n    loading: false,\r\n    id: createId(),\r\n    status: 'input', // new/edit/del/init/input\r\n    src: '', // 图像相对地址\r\n    display: '', // 图像完整地址, 用于显示\r\n    imgId: '', // 图像资源 id\r\n  }\r\n  // 未传入data, 说明是单纯新建, 单纯新建的值是输入框状态\r\n  if (!data) {\r\n    return item\r\n  }\r\n  // 判断是否是本地图片\r\n  if (data.file && !data.id) {\r\n    if (!isEmptyObj(oldData)) {\r\n      // 如果旧数据状态是输入框, 则为新图片\r\n      if (oldData.status === 'input' || oldData.status === 'new') {\r\n        item.status = 'new'\r\n      }\r\n      // 如果旧数据状态是初始化 init, 则为修改\r\n      if (oldData.status === 'init' || oldData.status === 'edit') {\r\n        item.status = 'edit'\r\n      }\r\n    } else {\r\n      item.status = 'new'\r\n    }\r\n\r\n    // 本地数据初始化\r\n    item.id = oldData.id || item.id\r\n    item.src = ''\r\n    item.imgId = ''\r\n    item.display = data.localSrc || item.display\r\n    item = { ...data, ...item }\r\n    return item\r\n  }\r\n\r\n  // 存在id, 说明是传入已存在数据\r\n  item.id = data.id || createId()\r\n  item.imgId = data.imgId || item.imgId\r\n  item.src = data.src || item.src\r\n  item.display = data.display || item.display\r\n  item.status = data.status || 'init'\r\n  item = { ...data, ...item }\r\n  return item\r\n}\r\n\r\n/**\r\n * 获取范围类型限制的提示文本\r\n * @param {String} prx 提示前缀\r\n * @param {Number} min 范围下限\r\n * @param {Number} max 范围上限\r\n * @param {String} unit 单位\r\n */\r\nfunction getRangeTip(prx, min, max, unit = '') {\r\n  let str = prx\r\n  if (min && max) {\r\n    // 有范围限制\r\n    str += ` ${min}${unit}~${max}${unit}`\r\n  } else if (min) {\r\n    // 只有最小范围\r\n    str += ` ≥ ${min}${unit}`\r\n  } else if (max) {\r\n    // 只有最大范围\r\n    str += ` ≤ ${max}${unit}`\r\n  } else {\r\n    // 无限制\r\n    str += '无限制'\r\n  }\r\n  return str\r\n}\r\n\r\n/** for originUpload: 一次请求最多的文件数量 */\r\nconst uploadLimit = 10\r\n/** for originUpload: 文件对象缓存 */\r\nlet catchData = []\r\n/** for originUpload: 计时器缓存 */\r\nlet time\r\n\r\nexport default {\r\n  name: 'UploadImgs',\r\n  data() {\r\n    return {\r\n      srcList: [],\r\n      itemList: [],\r\n      imageRefs: [],\r\n      loading: false,\r\n      currentId: '', // 正在操作项的id\r\n      imageInitialIndex: 0,\r\n    }\r\n  },\r\n  props: {\r\n    /** 每一项宽度 */\r\n    width: {\r\n      type: [Number, String],\r\n      default: 160,\r\n    },\r\n    /** 每一项高度 */\r\n    height: {\r\n      type: [Number, String],\r\n      default: 160,\r\n    },\r\n    /** 是否开启自动上传 */\r\n    autoUpload: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    /** 初始化数据 */\r\n    value: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    /** 接受的文件类型 */\r\n    accept: {\r\n      type: String,\r\n      default: 'image/*',\r\n    },\r\n    /** 最少图片数量 */\r\n    minNum: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    /** 最多图片数量, 0 表示无限制 */\r\n    maxNum: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    /** 是否可排序 */\r\n    sortable: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    /** 是否可预览 */\r\n    preview: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    /** 是否可以一次多选 */\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    /** 图像验证规则 */\r\n    rules: {\r\n      type: [Object, Function],\r\n      default: () => ({\r\n        maxSize: 2,\r\n      }),\r\n    },\r\n    /** 是否禁用, 禁用后只可展示 不可进行编辑操作, 包括: 新增, 修改, 删除, 改变顺序 */\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    /** 上传前插入方法, 属于高级用法 */\r\n    beforeUpload: {\r\n      type: Function,\r\n      default: null,\r\n    },\r\n    /** 重写上传方法, 如果重写则覆盖组件内上传方法 */\r\n    remoteFuc: {\r\n      type: Function,\r\n      default: null,\r\n    },\r\n    /** 图像显示模式 */\r\n    fit: {\r\n      type: String,\r\n      default: 'contain',\r\n    },\r\n    /** 检测是否是动图 */\r\n    animatedCheck: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    /** 每项容器样式 */\r\n    boxStyle() {\r\n      const { width, height, disabled } = this\r\n      const style = {}\r\n      if (typeof width === 'number') {\r\n        style.width = `${width}px`\r\n      } else if (typeof width === 'string') {\r\n        style.width = width\r\n      }\r\n      if (typeof height === 'number') {\r\n        style.height = `${height}px`\r\n      } else if (typeof height === 'string') {\r\n        style.height = height\r\n      }\r\n      if (disabled) {\r\n        style.cursor = 'not-allowed'\r\n      } else {\r\n        style.cursor = 'pointer'\r\n      }\r\n\r\n      /** 提示字体最大尺寸 */\r\n      let fontSize = 12\r\n      /** 每行提示预设 */\r\n      const maxText = 8\r\n      if (typeof width === 'number' && width / maxText < fontSize) {\r\n        fontSize = (width / maxText).toFixed(2)\r\n      }\r\n      style.fontSize = `${fontSize}px`\r\n      style.textAlign = 'center'\r\n      style.position = 'relative'\r\n      style.display = 'flex'\r\n      style.alignItems = 'center'\r\n      style.justifyContent = 'center'\r\n      style.overflow = 'hidden'\r\n      style.lineHeight = '1.3'\r\n      style.flexDirection = 'column'\r\n\r\n      return style\r\n    },\r\n    /**\r\n     * 上传图像数量下限\r\n     * @returns {Number}\r\n     */\r\n    min() {\r\n      const { minNum } = this\r\n      return minNum < 0 ? 0 : parseInt(minNum, 10)\r\n    },\r\n    /**\r\n     * 上传图像数量上限\r\n     * @returns {Number}\r\n     */\r\n    max() {\r\n      const { min, maxNum } = this\r\n      // 兼容用最大值小于最小值情况\r\n      return maxNum < min ? min : parseInt(maxNum, 10)\r\n    },\r\n    /**\r\n     * 是否是固定数量(最小等于最大)\r\n     * @returns {Boolean}\r\n     */\r\n    isStable() {\r\n      const { min, max } = this\r\n      return max !== 0 && min === max\r\n    },\r\n    /** 构造图像规范提示 */\r\n    rulesTip() {\r\n      const { rules } = this\r\n      const tips = []\r\n\r\n      /** 图像验证规则 */\r\n      let basicRule\r\n      // 针对动态规则模式, 获取输入为空时的规则\r\n      // 动态规则 rule 为函数, 当选择图片后根据选择的图片生成校验规则\r\n      if (typeof rules === 'function') {\r\n        try {\r\n          basicRule = rules()\r\n        } catch (err) {\r\n          basicRule = {}\r\n        }\r\n      } else {\r\n        basicRule = rules || {}\r\n      }\r\n\r\n      // 宽高限制提示语\r\n      if (basicRule.width && basicRule.height) {\r\n        // 固定宽高限制\r\n        tips.push(`宽高 ${basicRule.width}x${basicRule.height}`)\r\n      } else if (basicRule.width) {\r\n        // 固定宽限制\r\n        tips.push(`宽度 ${basicRule.width}`)\r\n        tips.push(`${getRangeTip('高度', basicRule.minHeight, basicRule.maxHeight)}`)\r\n      } else if (basicRule.height) {\r\n        // 固定高限制\r\n        tips.push(`高度 ${basicRule.height}`)\r\n        tips.push(`${getRangeTip('宽度', basicRule.minWidth, basicRule.maxWidth)}`)\r\n      } else {\r\n        // 宽高都不固定\r\n        tips.push(`${getRangeTip('宽度', basicRule.minWidth, basicRule.maxWidth)}`)\r\n        tips.push(`${getRangeTip('高度', basicRule.minHeight, basicRule.maxHeight)}`)\r\n      }\r\n\r\n      // 宽高比限制提示语\r\n      if (basicRule.ratio) {\r\n        if (Array.isArray(basicRule.ratio)) {\r\n          tips.push(`宽高比 ${basicRule.ratio.join(':')}`)\r\n        } else {\r\n          tips.push(`宽高比 ${basicRule.ratio}`)\r\n        }\r\n      }\r\n\r\n      // 文件大小\r\n      if (basicRule.minSize || basicRule.maxSize) {\r\n        tips.push(getRangeTip('文件大小', basicRule.minSize, basicRule.maxSize, 'Mb'))\r\n      }\r\n\r\n      // 是否动态图\r\n      if (basicRule.allowAnimated && basicRule.allowAnimated > 0) {\r\n        if (basicRule.allowAnimated === 1) {\r\n          tips.push('不允许上传动图')\r\n        } else if (basicRule.allowAnimated === 2) {\r\n          tips.push('只允许上传动图')\r\n        }\r\n      }\r\n\r\n      return tips\r\n    },\r\n  },\r\n  watch: {\r\n    /** 初始化值修改时重新初始化, 并且清空当前的编辑状态 */\r\n    value(val) {\r\n      // 初始化数据\r\n      this.initItemList(val)\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initItemList(this.value)\r\n  },\r\n  methods: {\r\n    /**\r\n     * 上传缓存中的图片\r\n     * @param {Array} uploadList 需要上传的缓存集合, 集合中包含回调函数\r\n     */\r\n    uploadCatch(uploadList) {\r\n      const data = {}\r\n      uploadList.forEach((item, index) => {\r\n        data[`file_${index}`] = item.img.file\r\n      })\r\n      return post('cms/file', data)\r\n        .then(res => {\r\n          if (!Array.isArray(res) || res.length === 0) {\r\n            throw new Error('图像上传失败')\r\n          }\r\n\r\n          const resObj = res.reduce((acc, item) => {\r\n            acc[item.key] = item\r\n            return acc\r\n          }, {})\r\n\r\n          uploadList.forEach((item, index) => {\r\n            const remoteData = resObj[`file_${index}`]\r\n            item.cb(remoteData)\r\n          })\r\n        })\r\n        .catch(err => {\r\n          uploadList.forEach(item => {\r\n            item.cb(false)\r\n          })\r\n          let msg = '图像上传失败, 请重试'\r\n          if (err.message) {\r\n            // eslint-disable-next-line\r\n            msg = err.message\r\n          }\r\n          console.error(err)\r\n          this.$message.error(msg)\r\n        })\r\n    },\r\n    /**\r\n     * 内置上传文件方法, 使用 debounce 优化提交效率\r\n     * 此处只能使用回调模式, 因为涉及 debounce 处理, promise 不可在外部改变其状态\r\n     * @param {Object} img 需要上传的数据项\r\n     * @param {Function} cb 回调函数\r\n     */\r\n    originUpload(img, cb) {\r\n      // 并且一次最多上传文件数量设为可配置\r\n      // 添加缓存\r\n      catchData.push({\r\n        img,\r\n        cb,\r\n      })\r\n\r\n      // 等于上限, 立即上传\r\n      if (catchData.length === uploadLimit) {\r\n        const data = [...catchData]\r\n        catchData = []\r\n        clearTimeout(time)\r\n        time = null\r\n        return this.uploadCatch(data)\r\n      }\r\n\r\n      // 清除上次一的定时器\r\n      if (time && catchData.length < uploadLimit) {\r\n        clearTimeout(time)\r\n        // 此时修改上一个 promise 状态为resolve\r\n      }\r\n\r\n      // 等待100ms\r\n      time = setTimeout(() => {\r\n        this.uploadCatch([...catchData])\r\n        catchData = []\r\n        time = null\r\n      }, 50)\r\n    },\r\n    /**\r\n     * 上传图像文件\r\n     * @param {Object} 需要上传的项, 包含文化和其它信息\r\n     */\r\n    async uploadImg(item) {\r\n      // 远程结果处理\r\n      const reduceResult = (imgItem, res) => {\r\n        // eslint-disable-next-line\r\n        imgItem.loading = false\r\n        if (!res) {\r\n          return\r\n        }\r\n        // eslint-disable-next-line\r\n        imgItem.display = res.url\r\n        // eslint-disable-next-line\r\n        imgItem.src = res.path\r\n        // eslint-disable-next-line\r\n        imgItem.imgId = res.id\r\n        // eslint-disable-next-line\r\n        imgItem.file = null\r\n        window.URL.revokeObjectURL(imgItem.display)\r\n      }\r\n\r\n      if (item.status === 'input' || !item.file) {\r\n        return\r\n      }\r\n\r\n      item.loading = true\r\n      if (this.beforeUpload && typeof this.beforeUpload === 'function') {\r\n        if (typeof this.beforeUpload === 'function') {\r\n          const result = await new Promise(resolve => {\r\n            let beforeUploadResult\r\n            try {\r\n              beforeUploadResult = this.beforeUpload(item, data => {\r\n                resolve(!!data)\r\n              })\r\n            } catch (err) {\r\n              resolve(false)\r\n            }\r\n            // promise 模式\r\n            if (beforeUploadResult != null && typeof beforeUploadResult.then === 'function') {\r\n              beforeUploadResult\r\n                .then(remoteData => {\r\n                  resolve(!!remoteData)\r\n                })\r\n                .catch(() => {\r\n                  resolve(false)\r\n                })\r\n            }\r\n          })\r\n          if (!result) {\r\n            reduceResult(item, false)\r\n            return false\r\n          }\r\n        }\r\n      }\r\n      // 如果是用户自定义方法\r\n      // 出于简化 api 的考虑, 只允许单个文件上传, 不进行代理\r\n      if (this.remoteFuc && typeof this.remoteFuc === 'function') {\r\n        const result = await new Promise(resolve => {\r\n          let remoteFucResult\r\n          try {\r\n            remoteFucResult = this.remoteFuc(item.file, remoteData => {\r\n              resolve(remoteData || false)\r\n            })\r\n          } catch (err) {\r\n            this.$message.error('执行自定义上传出错')\r\n            resolve(false)\r\n          }\r\n          // promise 模式\r\n          if (remoteFucResult != null && typeof remoteFucResult.then === 'function') {\r\n            remoteFucResult\r\n              .then(remoteData => {\r\n                resolve(remoteData || false)\r\n              })\r\n              .catch(() => {\r\n                resolve(false)\r\n              })\r\n          }\r\n        })\r\n        reduceResult(item, result)\r\n        if (!result) {\r\n          return false\r\n        }\r\n        return item\r\n      }\r\n\r\n      // 使用内置上传\r\n      return new Promise(resolve => {\r\n        this.originUpload(item, data => {\r\n          reduceResult(item, data)\r\n          if (!data) {\r\n            resolve(false)\r\n          } else {\r\n            resolve(item)\r\n          }\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * 获取当前组件数据\r\n     */\r\n    async getValue() {\r\n      const { itemList, isStable, min } = this\r\n\r\n      // 检查是否有不符合要求的空项\r\n      const l = isStable ? itemList.length : itemList.length - 1\r\n      for (let i = 0; i < l; i += 1) {\r\n        if (itemList[i].status === 'input') {\r\n          this.$message.error('当前存在未选择图片, 请全部选择')\r\n          return false\r\n        }\r\n      }\r\n      if (l < min) {\r\n        this.$message.error(`至少选择${min}张图片`)\r\n        return false\r\n      }\r\n      // 提取需要上传文件\r\n      const asyncList = []\r\n\r\n      for (let i = 0; i < itemList.length; i += 1) {\r\n        // 跳过上传组件\r\n        if (itemList[i].status !== 'input') {\r\n          if (!itemList[i].file) {\r\n            asyncList.push(Promise.resolve(itemList[i]))\r\n          } else {\r\n            // 上传文件后获取对应key值\r\n            asyncList.push(this.uploadImg(itemList[i]))\r\n          }\r\n        }\r\n      }\r\n      const imgInfoList = await Promise.all(asyncList)\r\n      // const imgInfoList = this.itemList.filter(item => (item.status !== 'input'))\r\n\r\n      // 检查是否有上传失败的图像\r\n      // 如果有失败的上传, 则返回错误\r\n      if (imgInfoList.some(item => !item)) {\r\n        return false\r\n      }\r\n\r\n      // 如无错误, 表示图像都以上传, 开始构造数据\r\n      /**\r\n       * @type {array<ReturnItem>}\r\n       */\r\n      const result = imgInfoList.map(item => {\r\n        /** @type {ReturnItem} */\r\n        const val = {\r\n          id: item.status === 'new' ? '' : item.id,\r\n          imgId: item.imgId || null,\r\n          src: item.src || null,\r\n          display: item.display,\r\n          width: item.width || null,\r\n          height: item.height || null,\r\n          fileSize: item.size || null,\r\n          fileName: item.name || null,\r\n          fileType: item.type || null,\r\n          isAnimated: item.isAnimated || null,\r\n        }\r\n        return val\r\n      })\r\n      // 获取数据成功后发出\r\n      this.$emit('upload', result)\r\n      return result\r\n    },\r\n    /**\r\n     * 删除某项\r\n     * @param {Number|String} id 删除项 id\r\n     */\r\n    delItem(id) {\r\n      const { itemList, isStable } = this\r\n      // 根据id找到对应项\r\n      const index = itemList.findIndex(item => item.id === id)\r\n      const blobUrl = itemList[index].display\r\n      if (isStable) {\r\n        // 固定数量图片, 删除后留下空项\r\n        itemList[index] = createItem()\r\n        this.itemList = [...itemList]\r\n      } else {\r\n        itemList.splice(index, 1)\r\n      }\r\n      // 释放内存\r\n      window.URL.revokeObjectURL(blobUrl)\r\n      this.initItemList(this.itemList)\r\n    },\r\n    /**\r\n     * 预览图像\r\n     * @param {Object} data 需要预览的项的数据\r\n     * @param {Number} index 索引序号\r\n     */\r\n    previewImg(data, index) {\r\n      const usable = this.itemList.filter(item => item.status !== 'input')\r\n      this.srcList = usable.map(item => item.display)\r\n      this.imageRefs[index].showViewer = true\r\n    },\r\n    setImageRef(el) {\r\n      if (el) {\r\n        this.imageRefs.push(el)\r\n      }\r\n    },\r\n    /**\r\n     * 移动图像位置\r\n     * @param {Number|String} id 操作项的 id\r\n     * @param {Number} step 移动的偏移量\r\n     */\r\n    move(id, step) {\r\n      const { itemList, isStable } = this\r\n      // 找到操作的元素\r\n      const index = itemList.findIndex(item => item.id === id)\r\n      // 边界检测\r\n      if (index + step < 0 || index + step >= itemList.length) return\r\n      // 非固定项时, 不可和最后一项输入换位子\r\n      if (!isStable && index + step === itemList.length - 1) {\r\n        if (itemList[itemList.length - 1].status === 'input') return\r\n      }\r\n      const i = itemList[index]\r\n      const j = itemList[index + step]\r\n      itemList[index] = j\r\n      itemList[index + step] = i\r\n      this.itemList = [...itemList]\r\n    },\r\n    /**\r\n     * 验证上传的图像是否符合要求\r\n     * @param {LocalFileInfo} imgInfo 图像信息, 包括文件名, 宽高\r\n     */\r\n    async validateImg(imgInfo) {\r\n      const { rules } = this\r\n      /** @type ValidateRule */\r\n      let rule\r\n      // 针对动态规则模式, 获取输入为空时的规则\r\n      // 动态规则 rule 为函数, 当选择图片后根据选择的图片生成校验规则\r\n      if (typeof rules === 'function') {\r\n        try {\r\n          rule = rules(imgInfo)\r\n        } catch (err) {\r\n          rule = {}\r\n        }\r\n      } else {\r\n        rule = rules\r\n      }\r\n\r\n      if (rule.allowAnimated && rule.allowAnimated > 0) {\r\n        if (imgInfo.isAnimated === null) {\r\n          this.$message.error('要进行是否动图验证需要配置 \"animated-check\" 属性为 true')\r\n        } else {\r\n          if (rule.allowAnimated === 1 && imgInfo.isAnimated) {\r\n            throw new Error(`\"${imgInfo.name}\"为动态图, 不允许上传`)\r\n          }\r\n          if (rule.allowAnimated === 2 && !imgInfo.isAnimated) {\r\n            throw new Error(`\"${imgInfo.name}\"为静态图, 只允许上传动态图`)\r\n          }\r\n        }\r\n      }\r\n\r\n      // 宽高限制\r\n      if (rule.width) {\r\n        if (imgInfo.width !== rule.width) {\r\n          throw new Error(`\"${imgInfo.name}\"图像宽不符合要求, 需为${rule.width}`)\r\n        }\r\n      } else {\r\n        if (rule.minWidth && imgInfo.width < rule.minWidth) {\r\n          throw new Error(`\"${imgInfo.name}\"图像宽不符合要求, 至少为${rule.minWidth}`)\r\n        }\r\n        if (rule.maxWidth && imgInfo.width > rule.maxWidth) {\r\n          throw new Error(`\"${imgInfo.name}\"图像宽不符合要求, 至多为${rule.maxWidth}`)\r\n        }\r\n      }\r\n      if (rule.height) {\r\n        if (imgInfo.height !== rule.height) {\r\n          throw new Error(`\"${imgInfo.name}\"图像高不符合要求, 需为${rule.height}`)\r\n        }\r\n      } else {\r\n        if (rule.minHeight && imgInfo.height < rule.minHeight) {\r\n          throw new Error(`\"${imgInfo.name}\"图像高不符合要求, 至少为${rule.minHeight}`)\r\n        }\r\n        if (rule.maxHeight && imgInfo.height > rule.maxHeight) {\r\n          throw new Error(`\"${imgInfo.name}\"图像高不符合要求, 至多为${rule.maxHeight}`)\r\n        }\r\n      }\r\n\r\n      // 宽高比限制提示语\r\n      if (rule.ratio) {\r\n        let ratio\r\n        if (Array.isArray(rule.ratio)) {\r\n          ratio = rule.ratio[0] / rule.ratio[1]\r\n        } else {\r\n          // eslint-disable-next-line\r\n          ratio = rule.ratio\r\n        }\r\n        ratio = ratio.toFixed(2)\r\n        if ((imgInfo.width / imgInfo.height).toFixed(2) !== ratio) {\r\n          throw new Error(`\"${imgInfo.name}\"图像宽高比不符合要求, 需为${ratio}`)\r\n        }\r\n      }\r\n\r\n      // 文件大小\r\n      if (rule.minSize && imgInfo.size < rule.minSize * ONE_MB) {\r\n        throw new Error(`\"${imgInfo.name}\"图像文件大小比不符合要求, 至少为${rule.minSize}Mb`)\r\n      }\r\n      if (rule.maxSize && imgInfo.size > rule.maxSize * ONE_MB) {\r\n        throw new Error(`\"${imgInfo.name}\"图像文件大小比不符合要求, 至多为${rule.maxSize}Mb`)\r\n      }\r\n\r\n      return true\r\n    },\r\n    /**\r\n     * 选择图像文件后处理, 包括获取图像信息, 验证图像等\r\n     * @param {Event} e input change 事件对象\r\n     */\r\n    async handleChange(e) {\r\n      const { currentId, autoUpload } = this\r\n      const { files } = e.target\r\n      let imgInfoList\r\n\r\n      if (!files) return\r\n      /** 中间步骤缓存, 在出错时用于释放 createObjectURL 的内存 */\r\n      let cache = []\r\n      /**\r\n       * 处理单个图片, 返回处理成功的图片数据\r\n       * @param {File} file 图片文件\r\n       */\r\n      const handleImg = async file => {\r\n        // 获取图像信息\r\n        const info = await this.getImgInfo(file)\r\n        cache.push(info)\r\n        // 验证图像信息\r\n        await this.validateImg(info)\r\n        return info\r\n      }\r\n\r\n      const asyncList = []\r\n      for (let i = 0; i < files.length; i += 1) {\r\n        asyncList.push(handleImg(files[i]))\r\n      }\r\n      try {\r\n        imgInfoList = await Promise.all(asyncList)\r\n        // 设置图片信息\r\n        this.setImgInfo(currentId, imgInfoList)\r\n        // 开启自动上传\r\n        if (autoUpload) {\r\n          this.itemList.forEach(ele => {\r\n            this.uploadImg(ele)\r\n          })\r\n        }\r\n      } catch (err) {\r\n        // 清空缓存\r\n        for (let i = 0; i < cache.length; i += 1) {\r\n          window.URL.revokeObjectURL(cache[i].localSrc)\r\n        }\r\n        cache = null\r\n        console.error(err)\r\n        this.$message.error(err.message)\r\n      }\r\n    },\r\n    /**\r\n     * 根据信息列表设置图像信息\r\n     * 用户选择图片, 图片通过验证后可获取到图像信息数组\r\n     * 将这一组图像信息数据设置在 itemList 中\r\n     * @param {Array<LocalFileInfo>} imgInfoList 需要设置的图像数组\r\n     * @param {Number|String} id 操作项的 id\r\n     */\r\n    setImgInfo(currentId, imgInfoList = []) {\r\n      const { max, itemList } = this\r\n      // 找到特定图像位置\r\n      const index = this.itemList.findIndex(item => item.id === currentId)\r\n      // 释放内存\r\n      window.URL.revokeObjectURL(this.itemList[index].display)\r\n      // 替换图片\r\n      this.itemList[index] = createItem(imgInfoList[0], this.itemList[index])\r\n\r\n      // 如果需要设置的图像数量大于1, 需要执行追加图片逻辑\r\n      if (imgInfoList.length > 1) {\r\n        // 最大图片数量限制\r\n        let l = imgInfoList.length\r\n        if (this.isStable) {\r\n          // 固定数量模式, 按次序插入空项\r\n          for (let i = 0, k = 1; i < max && k < l; i += 1) {\r\n            if (itemList[i].status === 'input') {\r\n              this.itemList[i] = createItem(imgInfoList[k])\r\n              k += 1\r\n            }\r\n          }\r\n        } else {\r\n          const empty = max - itemList.length\r\n          if (max && l > empty) {\r\n            l = empty\r\n          }\r\n          if (itemList[itemList.length - 1].status === 'input') {\r\n            this.itemList.pop()\r\n          }\r\n          for (let i = 1; i <= l; i += 1) {\r\n            this.itemList.push(createItem(imgInfoList[i]))\r\n          }\r\n        }\r\n      }\r\n\r\n      // 初始化图片\r\n      this.initItemList(this.itemList)\r\n    },\r\n    /**\r\n     * 支持键盘操作\r\n     * @param {Event} e 键盘事件对象\r\n     * @param {Number|String} id 操作项的 id\r\n     */\r\n    handleKeydown(e, id) {\r\n      if (e.target !== e.currentTarget) return\r\n      if (e.keyCode === 13 || e.keyCode === 32) {\r\n        this.handleClick(id)\r\n      }\r\n    },\r\n    /**\r\n     * 处理点击事件, 并转移到文件上传元素\r\n     * 并记录当前操作元素 id\r\n     * @param {Number|String} id 操作项的 id\r\n     */\r\n    handleClick(id) {\r\n      if (!this.disabled) {\r\n        this.currentId = id || ''\r\n        this.$refs.input.value = null\r\n        this.$refs.input.click()\r\n      }\r\n    },\r\n    /**\r\n     * 初始化 itemList\r\n     * @param {Array} val 初始化的数据数组\r\n     */\r\n    initItemList(val) {\r\n      const { max, isStable, disabled } = this\r\n      const result = []\r\n\r\n      // 初始值不存在情况\r\n      // 包括初始值不合法\r\n      if (!val || !Array.isArray(val) || val.length === 0) {\r\n        // 固定数量图像上传, 直接初始化固定数量的上传控件\r\n        if (isStable) {\r\n          for (let i = 0; i < max; i += 1) {\r\n            result.push(createItem())\r\n          }\r\n          this.itemList = result\r\n          return\r\n        }\r\n        // 如果不是固定上传数量, 则仅创建一个空项\r\n        result.push(createItem())\r\n        this.itemList = result\r\n        return\r\n      }\r\n\r\n      // 存在初始值\r\n      for (let i = 0; i < val.length; i += 1) {\r\n        result.push(createItem(val[i]))\r\n      }\r\n      // 初始项小于最大数量限制, 并且处于可编辑状态, 并且最后一项不是input\r\n      if ((max === 0 || val.length < max) && !disabled && val[val.length - 1].status !== 'input') {\r\n        // 后面添加空项\r\n        result.push(createItem())\r\n      }\r\n      this.itemList = result\r\n    },\r\n    /**\r\n     * 获取图像信息\r\n     * @param {File} file 文件对象\r\n     * @returns {LocalFileInfo} 信息对象\r\n     */\r\n    async getImgInfo(file) {\r\n      const { animatedCheck } = this\r\n      const localSrc = window.URL.createObjectURL(file)\r\n      // 严格检测文件类型\r\n      const fileType = await getFileType(file)\r\n      // 检测是否是动图\r\n      let isAnimated = null\r\n      if (animatedCheck) {\r\n        isAnimated = await checkIsAnimated({ file, fileType, fileUrl: localSrc })\r\n      }\r\n      return new Promise((resolve, reject) => {\r\n        let image = new Image()\r\n        image.src = localSrc\r\n        image.onload = () => {\r\n          /**\r\n           * @type {LocalFileInfo}\r\n           */\r\n          const localFileInfo = {\r\n            localSrc,\r\n            file,\r\n            width: image.width,\r\n            height: image.height,\r\n            name: file.name,\r\n            size: file.size,\r\n            type: fileType === 'unknow' ? file.type : fileType,\r\n            lastModified: file.lastModified,\r\n            isAnimated,\r\n          }\r\n          resolve(localFileInfo)\r\n          image = null\r\n        }\r\n        image.onerror = () => {\r\n          reject(new Error('图像加载失败'))\r\n          image = null\r\n        }\r\n      })\r\n    },\r\n    /** 清空全部图片 */\r\n    clear() {\r\n      this.initItemList([])\r\n      this.getValue()\r\n    },\r\n    /** 重置图片数据传入属性 */\r\n    reset() {\r\n      this.initItemList(this.value)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.upload-imgs-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  .upload-item,\r\n  .thumb-item {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 3px;\r\n    transition: all 0.1s;\r\n    color: #666666;\r\n    margin-right: 1em;\r\n    margin-bottom: 1em;\r\n\r\n    &.disabled {\r\n      color: #ababab;\r\n    }\r\n\r\n    &:not(.disabled):hover {\r\n      border-color: #3963bc;\r\n      color: #3963bc;\r\n    }\r\n  }\r\n\r\n  .thumb-item {\r\n    :v-deep(.el-image-viewer__canvas) {\r\n      position: absolute;\r\n      max-width: 800px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n    .info {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      top: 0;\r\n      left: 0;\r\n      transition: all 0.3s;\r\n      transition-delay: 0.1s;\r\n\r\n      .wait-upload {\r\n        background: #ffcb71;\r\n        color: white;\r\n        position: absolute;\r\n        display: inline-block;\r\n        width: 1.7em;\r\n        height: 1.5em;\r\n        top: 0;\r\n        right: 0;\r\n        border-radius: 0 0 0 1.4em;\r\n        transition: all 0.1s;\r\n\r\n        &::before {\r\n          font-size: 1.4em;\r\n          position: absolute;\r\n          right: -1px;\r\n          transform: scale(0.7);\r\n        }\r\n      }\r\n    }\r\n\r\n    .control {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      top: 0;\r\n      left: 0;\r\n      opacity: 0;\r\n      background-color: rgba(0, 0, 0, 0.3);\r\n      transition: all 0.3s;\r\n      transition-delay: 0.1s;\r\n\r\n      .del {\r\n        background: #f4516c;\r\n        color: white;\r\n        position: absolute;\r\n        display: inline-block;\r\n        width: 1.7em;\r\n        height: 1.5em;\r\n        top: 0;\r\n        right: 0;\r\n        opacity: 0;\r\n        border-radius: 0 0 0 1.4em;\r\n        transition: all 0.1s;\r\n\r\n        &::before {\r\n          font-size: 1.4em;\r\n          position: absolute;\r\n          right: -1px;\r\n          transform: scale(0.7);\r\n        }\r\n\r\n        &:hover {\r\n          transform: translate(-0.5em, 0.4em) scale(1.5);\r\n        }\r\n      }\r\n\r\n      .preview {\r\n        color: white;\r\n        font-size: 2em;\r\n        transition: all 0.2s;\r\n\r\n        &:hover {\r\n          transform: scale(1.2);\r\n        }\r\n      }\r\n\r\n      .control-bottom {\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        color: white;\r\n        background-color: rgba(0, 0, 0, 0.3);\r\n        font-size: 1.5em;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        transform: translate(0, 100%);\r\n        transition: all 0.2s;\r\n        transition-delay: 0.1s;\r\n        padding: 5px 0;\r\n\r\n        .control-bottom-btn {\r\n          transform: all 0.2s;\r\n\r\n          &.disabled {\r\n            color: #ababab;\r\n            cursor: not-allowed;\r\n          }\r\n\r\n          &:not(.disabled):hover {\r\n            transform: scale(1.2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .control {\r\n        opacity: 1;\r\n      }\r\n\r\n      .del {\r\n        opacity: 1;\r\n      }\r\n\r\n      .control-bottom {\r\n        transform: translate(0, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  .upload-imgs__input {\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./index.vue?vue&type=template&id=640f10f0&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=640f10f0&lang=scss&scoped=true\"\n\nimport exportComponent from \"E:\\\\postgraduatecode\\\\lin-cms-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-640f10f0\"]])\n\nexport default __exports__"],"names":["toIntegerOrInfinity","toString","requireObjectCoercible","$RangeError","RangeError","module","exports","count","str","this","result","n","Infinity","$","uncurryThis","thisNumberValue","$repeat","fails","$String","String","floor","Math","repeat","stringSlice","slice","nativeToFixed","toFixed","pow","x","acc","log","x2","multiply","data","c","index","c2","divide","dataToString","s","t","length","FORCED","target","proto","forced","fractionDigits","e","z","j","k","number","fractDigits","sign","class","style","itemList","item","i","key","id","display","boxStyle","fit","ref","setImageRef","src","previewSrcList","srcList","file","delItem","title","disabled","handleClick","sortable","preview","move","previewImg","loading","handleKeydown","$event","rulesTip","join","type","accept","multiple","handleChange","ONE_KB","ONE_MB","createItem","oldData","createId","status","imgId","isEmptyObj","localSrc","getRangeTip","prx","min","max","unit","time","uploadLimit","catchData","name","imageRefs","currentId","imageInitialIndex","props","width","Number","default","height","autoUpload","Boolean","value","Array","minNum","maxNum","rules","Object","Function","maxSize","beforeUpload","remoteFuc","animatedCheck","computed","cursor","fontSize","maxText","textAlign","position","alignItems","justifyContent","overflow","lineHeight","flexDirection","parseInt","isStable","basicRule","tips","err","push","minHeight","maxHeight","minWidth","maxWidth","ratio","isArray","minSize","allowAnimated","watch","val","initItemList","mounted","methods","uploadCatch","uploadList","forEach","img","post","then","res","Error","resObj","reduce","remoteData","cb","catch","msg","message","console","error","$message","originUpload","clearTimeout","setTimeout","uploadImg","reduceResult","imgItem","url","path","window","URL","revokeObjectURL","Promise","resolve","beforeUploadResult","remoteFucResult","getValue","l","asyncList","all","imgInfoList","some","map","fileSize","size","fileName","fileType","isAnimated","$emit","findIndex","blobUrl","splice","usable","filter","showViewer","el","step","validateImg","imgInfo","rule","files","cache","handleImg","getImgInfo","info","setImgInfo","ele","empty","pop","currentTarget","keyCode","$refs","input","click","createObjectURL","getFileType","checkIsAnimated","fileUrl","reject","image","Image","onload","localFileInfo","lastModified","onerror","clear","reset","__exports__","render"],"sourceRoot":""}